{
  "version": 3,
  "sources": ["../../crc-32/crc32.js", "../../cuint/lib/uint32.js", "../../cuint/lib/uint64.js", "../../cuint/index.js", "../../agora-access-token/src/AccessToken.js", "../../agora-access-token/src/RtcTokenBuilder.js", "../../agora-access-token/src/RtmTokenBuilder.js", "../../agora-access-token/index.js"],
  "sourcesContent": ["/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T = signed_crc_table();\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t}\n\tif(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf(buf, seed) {\n\tif(buf.length > 10000) return crc32_buf_8(buf, seed);\n\tvar C = seed ^ -1, L = buf.length - 3;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf_8(buf, seed) {\n\tvar C = seed ^ -1, L = buf.length - 7;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T[(C ^ c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn C ^ -1;\n}\nCRC32.table = T;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n", "/**\n\tC-like unsigned 32 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t36: UINT32( Math.pow(36, 5) )\n\t,\t16: UINT32( Math.pow(16, 7) )\n\t,\t10: UINT32( Math.pow(10, 9) )\n\t,\t2:  UINT32( Math.pow(2, 30) )\n\t}\n\tvar radixCache = {\n\t\t36: UINT32(36)\n\t,\t16: UINT32(16)\n\t,\t10: UINT32(10)\n\t,\t2:  UINT32(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 32 bits integer\n\t * @constructor\n\t * @param {Number|String|Number} low bits     | integer as a string \t\t | integer as a number\n\t * @param {Number|Number|Undefined} high bits | radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT32 (l, h) {\n\t\tif ( !(this instanceof UINT32) )\n\t\t\treturn new UINT32(l, h)\n\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tthis.remainder = null\n\t\tif (typeof h == 'undefined')\n\t\t\treturn fromNumber.call(this, l)\n\n\t\tif (typeof l == 'string')\n\t\t\treturn fromString.call(this, l, h)\n\n\t\tfromBits.call(this, l, h)\n\t}\n\n\t/**\n\t * Set the current _UINT32_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} low bits\n\t * @param {Number} high bits\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (l, h) {\n\t\tthis._low = l | 0\n\t\tthis._high = h | 0\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT32_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT32_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tvar value = parseInt(s, radix || 10)\n\n\t\tthis._low = value & 0xFFFF\n\t\tthis._high = value >>> 16\n\n\t\treturn this\n\t}\n\tUINT32.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT32_ to a number\n\t * @method toNumber\n\t * @return {Number} the converted UINT32\n\t */\n\tUINT32.prototype.toNumber = function () {\n\t\treturn (this._high * 65536) + this._low\n\t}\n\n\t/**\n\t * Convert this _UINT32_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT32\n\t */\n\tUINT32.prototype.toString = function (radix) {\n\t\treturn this.toNumber().toString(radix || 10)\n\t}\n\n\t/**\n\t * Add two _UINT32_. The current _UINT32_ stores the result\n\t * @method add\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.add = function (other) {\n\t\tvar a00 = this._low + other._low\n\t\tvar a16 = a00 >>> 16\n\n\t\ta16 += this._high + other._high\n\n\t\tthis._low = a00 & 0xFFFF\n\t\tthis._high = a16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT32_. The current _UINT32_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.subtract = function (other) {\n\t\t//TODO inline\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT32_. The current _UINT32_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16\n\t\t\tb = b00 + b16\n\t\t\ta*b = (a00 + a16)(b00 + b16)\n\t\t\t\t= a00b00 + a00b16 + a16b00 + a16b16\n\n\t\t\ta16b16 overflows the 32bits\n\t\t */\n\t\tvar a16 = this._high\n\t\tvar a00 = this._low\n\t\tvar b16 = other._high\n\t\tvar b00 = other._low\n\n/* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)\n\t\t// this == 0 or other == 1: nothing to do\n\t\tif ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this\n\n\t\t// other == 0 or this == 1: this = other\n\t\tif ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {\n\t\t\tthis._low = other._low\n\t\t\tthis._high = other._high\n\t\t\treturn this\n\t\t}\n*/\n\n\t\tvar c16, c00\n\t\tc00 = a00 * b00\n\t\tc16 = c00 >>> 16\n\n\t\tc16 += a16 * b00\n\t\tc16 &= 0xFFFF\t\t// Not required but improves performance\n\t\tc16 += a00 * b16\n\n\t\tthis._low = c00 & 0xFFFF\n\t\tthis._high = c16 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT32_. The current _UINT32_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT32_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.div = function (other) {\n\t\tif ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')\n\n\t\t// other == 1\n\t\tif (other._high == 0 && other._low == 1) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\treturn this\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._low = 0\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT32(0)\n\t\t\tthis._low = 1\n\t\t\tthis._high = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._low = 0\n\t\tthis._high = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 16) {\n\t\t\t\t\tthis._high |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._low |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT32_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.negate = function () {\n\t\tvar v = ( ~this._low & 0xFFFF ) + 1\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = (~this._high + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Equals\n\t * @method eq\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.equals = UINT32.prototype.eq = function (other) {\n\t\treturn (this._low == other._low) && (this._high == other._high)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {\n\t\tif (this._high > other._high) return true\n\t\tif (this._high < other._high) return false\n\t\treturn this._low > other._low\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT32\n\t * @return {Boolean}\n\t */\n\tUINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {\n\t\tif (this._high < other._high) return true\n\t\tif (this._high > other._high) return false\n\t\treturn this._low < other._low\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.or = function (other) {\n\t\tthis._low |= other._low\n\t\tthis._high |= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.and = function (other) {\n\t\tthis._low &= other._low\n\t\tthis._high &= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.not = function() {\n\t\tthis._low = ~this._low & 0xFFFF\n\t\tthis._high = ~this._high & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT32\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.xor = function (other) {\n\t\tthis._low ^= other._low\n\t\tthis._high ^= other._high\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {\n\t\tif (n > 16) {\n\t\t\tthis._low = this._high >> (n - 16)\n\t\t\tthis._high = 0\n\t\t} else if (n == 16) {\n\t\t\tthis._low = this._high\n\t\t\tthis._high = 0\n\t\t} else {\n\t\t\tthis._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )\n\t\t\tthis._high >>= n\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {\n\t\tif (n > 16) {\n\t\t\tthis._high = this._low << (n - 16)\n\t\t\tthis._low = 0\n\t\t\tif (!allowOverflow) {\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t} else if (n == 16) {\n\t\t\tthis._high = this._low\n\t\t\tthis._low = 0\n\t\t} else {\n\t\t\tthis._high = (this._high << n) | (this._low >> (16-n))\n\t\t\tthis._low = (this._low << n) & 0xFFFF\n\t\t\tif (!allowOverflow) {\n\t\t\t\t// Overflow only allowed on the high bits...\n\t\t\t\tthis._high &= 0xFFFF\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v << n) | (v >>> (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {\n\t\tvar v = (this._high << 16) | this._low\n\t\tv = (v >>> n) | (v << (32 - n))\n\t\tthis._low = v & 0xFFFF\n\t\tthis._high = v >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT32_\n\t * @method clone\n\t * @return {Object} cloned UINT32\n\t */\n\tUINT32.prototype.clone = function () {\n\t\treturn new UINT32(this._low, this._high)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT32\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT32\n\t} else {\n\t\t// Browser\n\t\troot['UINT32'] = UINT32\n\t}\n\n})(this)\n", "/**\n\tC-like unsigned 64 bits integers in Javascript\n\tCopyright (C) 2013, Pierre Curto\n\tMIT license\n */\n;(function (root) {\n\n\t// Local cache for typical radices\n\tvar radixPowerCache = {\n\t\t16: UINT64( Math.pow(16, 5) )\n\t,\t10: UINT64( Math.pow(10, 5) )\n\t,\t2:  UINT64( Math.pow(2, 5) )\n\t}\n\tvar radixCache = {\n\t\t16: UINT64(16)\n\t,\t10: UINT64(10)\n\t,\t2:  UINT64(2)\n\t}\n\n\t/**\n\t *\tRepresents an unsigned 64 bits integer\n\t * @constructor\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * or\n\t * @param {String|Number} integer as a string \t\t | integer as a number\n\t * @param {Number|Undefined} radix (optional, default=10)\n\t * @return \n\t */\n\tfunction UINT64 (a00, a16, a32, a48) {\n\t\tif ( !(this instanceof UINT64) )\n\t\t\treturn new UINT64(a00, a16, a32, a48)\n\n\t\tthis.remainder = null\n\t\tif (typeof a00 == 'string')\n\t\t\treturn fromString.call(this, a00, a16)\n\n\t\tif (typeof a16 == 'undefined')\n\t\t\treturn fromNumber.call(this, a00)\n\n\t\tfromBits.apply(this, arguments)\n\t}\n\n\t/**\n\t * Set the current _UINT64_ object with its low and high bits\n\t * @method fromBits\n\t * @param {Number} first low bits (8)\n\t * @param {Number} second low bits (8)\n\t * @param {Number} first high bits (8)\n\t * @param {Number} second high bits (8)\n\t * or\n\t * @param {Number} low bits (32)\n\t * @param {Number} high bits (32)\n\t * @return ThisExpression\n\t */\n\tfunction fromBits (a00, a16, a32, a48) {\n\t\tif (typeof a32 == 'undefined') {\n\t\t\tthis._a00 = a00 & 0xFFFF\n\t\t\tthis._a16 = a00 >>> 16\n\t\t\tthis._a32 = a16 & 0xFFFF\n\t\t\tthis._a48 = a16 >>> 16\n\t\t\treturn this\n\t\t}\n\n\t\tthis._a00 = a00 | 0\n\t\tthis._a16 = a16 | 0\n\t\tthis._a32 = a32 | 0\n\t\tthis._a48 = a48 | 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromBits = fromBits\n\n\t/**\n\t * Set the current _UINT64_ object from a number\n\t * @method fromNumber\n\t * @param {Number} number\n\t * @return ThisExpression\n\t */\n\tfunction fromNumber (value) {\n\t\tthis._a00 = value & 0xFFFF\n\t\tthis._a16 = value >>> 16\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromNumber = fromNumber\n\n\t/**\n\t * Set the current _UINT64_ object from a string\n\t * @method fromString\n\t * @param {String} integer as a string\n\t * @param {Number} radix (optional, default=10)\n\t * @return ThisExpression\n\t */\n\tfunction fromString (s, radix) {\n\t\tradix = radix || 10\n\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\n\t\t/*\n\t\t\tIn Javascript, bitwise operators only operate on the first 32 bits \n\t\t\tof a number, even though parseInt() encodes numbers with a 53 bits \n\t\t\tmantissa.\n\t\t\tTherefore UINT64(<Number>) can only work on 32 bits.\n\t\t\tThe radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)\n\t\t\tmaximum input value is m = 32bits as 1 = 2^32 - 1\n\t\t\tSo the maximum substring length n is:\n\t\t\t36^(n+1) - 1 = 2^32 - 1\n\t\t\t36^(n+1) = 2^32\n\t\t\t(n+1)ln(36) = 32ln(2)\n\t\t\tn = 32ln(2)/ln(36) - 1\n\t\t\tn = 5.189644915687692\n\t\t\tn = 5\n\t\t */\n\t\tvar radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )\n\n\t\tfor (var i = 0, len = s.length; i < len; i += 5) {\n\t\t\tvar size = Math.min(5, len - i)\n\t\t\tvar value = parseInt( s.slice(i, i + size), radix )\n\t\t\tthis.multiply(\n\t\t\t\t\tsize < 5\n\t\t\t\t\t\t? new UINT64( Math.pow(radix, size) )\n\t\t\t\t\t\t: radixUint\n\t\t\t\t)\n\t\t\t\t.add( new UINT64(value) )\n\t\t}\n\n\t\treturn this\n\t}\n\tUINT64.prototype.fromString = fromString\n\n\t/**\n\t * Convert this _UINT64_ to a number (last 32 bits are dropped)\n\t * @method toNumber\n\t * @return {Number} the converted UINT64\n\t */\n\tUINT64.prototype.toNumber = function () {\n\t\treturn (this._a16 * 65536) + this._a00\n\t}\n\n\t/**\n\t * Convert this _UINT64_ to a string\n\t * @method toString\n\t * @param {Number} radix (optional, default=10)\n\t * @return {String} the converted UINT64\n\t */\n\tUINT64.prototype.toString = function (radix) {\n\t\tradix = radix || 10\n\t\tvar radixUint = radixCache[radix] || new UINT64(radix)\n\n\t\tif ( !this.gt(radixUint) ) return this.toNumber().toString(radix)\n\n\t\tvar self = this.clone()\n\t\tvar res = new Array(64)\n\t\tfor (var i = 63; i >= 0; i--) {\n\t\t\tself.div(radixUint)\n\t\t\tres[i] = self.remainder.toNumber().toString(radix)\n\t\t\tif ( !self.gt(radixUint) ) break\n\t\t}\n\t\tres[i-1] = self.toNumber().toString(radix)\n\n\t\treturn res.join('')\n\t}\n\n\t/**\n\t * Add two _UINT64_. The current _UINT64_ stores the result\n\t * @method add\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.add = function (other) {\n\t\tvar a00 = this._a00 + other._a00\n\n\t\tvar a16 = a00 >>> 16\n\t\ta16 += this._a16 + other._a16\n\n\t\tvar a32 = a16 >>> 16\n\t\ta32 += this._a32 + other._a32\n\n\t\tvar a48 = a32 >>> 16\n\t\ta48 += this._a48 + other._a48\n\n\t\tthis._a00 = a00 & 0xFFFF\n\t\tthis._a16 = a16 & 0xFFFF\n\t\tthis._a32 = a32 & 0xFFFF\n\t\tthis._a48 = a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Subtract two _UINT64_. The current _UINT64_ stores the result\n\t * @method subtract\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.subtract = function (other) {\n\t\treturn this.add( other.clone().negate() )\n\t}\n\n\t/**\n\t * Multiply two _UINT64_. The current _UINT64_ stores the result\n\t * @method multiply\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.multiply = function (other) {\n\t\t/*\n\t\t\ta = a00 + a16 + a32 + a48\n\t\t\tb = b00 + b16 + b32 + b48\n\t\t\ta*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)\n\t\t\t\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32 + a16b48\n\t\t\t\t+ a32b00 + a32b16 + a32b32 + a32b48\n\t\t\t\t+ a48b00 + a48b16 + a48b32 + a48b48\n\n\t\t\ta16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits\n\t\t\tso it comes down to:\n\t\t\ta*b\t= a00b00 + a00b16 + a00b32 + a00b48\n\t\t\t\t+ a16b00 + a16b16 + a16b32\n\t\t\t\t+ a32b00 + a32b16\n\t\t\t\t+ a48b00\n\t\t\t\t= a00b00\n\t\t\t\t+ a00b16 + a16b00\n\t\t\t\t+ a00b32 + a16b16 + a32b00\n\t\t\t\t+ a00b48 + a16b32 + a32b16 + a48b00\n\t\t */\n\t\tvar a00 = this._a00\n\t\tvar a16 = this._a16\n\t\tvar a32 = this._a32\n\t\tvar a48 = this._a48\n\t\tvar b00 = other._a00\n\t\tvar b16 = other._a16\n\t\tvar b32 = other._a32\n\t\tvar b48 = other._a48\n\n\t\tvar c00 = a00 * b00\n\n\t\tvar c16 = c00 >>> 16\n\t\tc16 += a00 * b16\n\t\tvar c32 = c16 >>> 16\n\t\tc16 &= 0xFFFF\n\t\tc16 += a16 * b00\n\n\t\tc32 += c16 >>> 16\n\t\tc32 += a00 * b32\n\t\tvar c48 = c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a16 * b16\n\t\tc48 += c32 >>> 16\n\t\tc32 &= 0xFFFF\n\t\tc32 += a32 * b00\n\n\t\tc48 += c32 >>> 16\n\t\tc48 += a00 * b48\n\t\tc48 &= 0xFFFF\n\t\tc48 += a16 * b32\n\t\tc48 &= 0xFFFF\n\t\tc48 += a32 * b16\n\t\tc48 &= 0xFFFF\n\t\tc48 += a48 * b00\n\n\t\tthis._a00 = c00 & 0xFFFF\n\t\tthis._a16 = c16 & 0xFFFF\n\t\tthis._a32 = c32 & 0xFFFF\n\t\tthis._a48 = c48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Divide two _UINT64_. The current _UINT64_ stores the result.\n\t * The remainder is made available as the _remainder_ property on\n\t * the _UINT64_ object. It can be null, meaning there are no remainder.\n\t * @method div\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.div = function (other) {\n\t\tif ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {\n\t\t\tif (other._a00 == 0) throw Error('division by zero')\n\n\t\t\t// other == 1: this\n\t\t\tif (other._a00 == 1) {\n\t\t\t\tthis.remainder = new UINT64(0)\n\t\t\t\treturn this\n\t\t\t}\n\t\t}\n\n\t\t// other > this: 0\n\t\tif ( other.gt(this) ) {\n\t\t\tthis.remainder = this.clone()\n\t\t\tthis._a00 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\t\t// other == this: 1\n\t\tif ( this.eq(other) ) {\n\t\t\tthis.remainder = new UINT64(0)\n\t\t\tthis._a00 = 1\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t\treturn this\n\t\t}\n\n\t\t// Shift the divisor left until it is higher than the dividend\n\t\tvar _other = other.clone()\n\t\tvar i = -1\n\t\twhile ( !this.lt(_other) ) {\n\t\t\t// High bit can overflow the default 16bits\n\t\t\t// Its ok since we right shift after this loop\n\t\t\t// The overflown bit must be kept though\n\t\t\t_other.shiftLeft(1, true)\n\t\t\ti++\n\t\t}\n\n\t\t// Set the remainder\n\t\tthis.remainder = this.clone()\n\t\t// Initialize the current result to 0\n\t\tthis._a00 = 0\n\t\tthis._a16 = 0\n\t\tthis._a32 = 0\n\t\tthis._a48 = 0\n\t\tfor (; i >= 0; i--) {\n\t\t\t_other.shiftRight(1)\n\t\t\t// If shifted divisor is smaller than the dividend\n\t\t\t// then subtract it from the dividend\n\t\t\tif ( !this.remainder.lt(_other) ) {\n\t\t\t\tthis.remainder.subtract(_other)\n\t\t\t\t// Update the current result\n\t\t\t\tif (i >= 48) {\n\t\t\t\t\tthis._a48 |= 1 << (i - 48)\n\t\t\t\t} else if (i >= 32) {\n\t\t\t\t\tthis._a32 |= 1 << (i - 32)\n\t\t\t\t} else if (i >= 16) {\n\t\t\t\t\tthis._a16 |= 1 << (i - 16)\n\t\t\t\t} else {\n\t\t\t\t\tthis._a00 |= 1 << i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Negate the current _UINT64_\n\t * @method negate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.negate = function () {\n\t\tvar v = ( ~this._a00 & 0xFFFF ) + 1\n\t\tthis._a00 = v & 0xFFFF\n\t\tv = (~this._a16 & 0xFFFF) + (v >>> 16)\n\t\tthis._a16 = v & 0xFFFF\n\t\tv = (~this._a32 & 0xFFFF) + (v >>> 16)\n\t\tthis._a32 = v & 0xFFFF\n\t\tthis._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\n\t * @method eq\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.equals = UINT64.prototype.eq = function (other) {\n\t\treturn (this._a48 == other._a48) && (this._a00 == other._a00)\n\t\t\t && (this._a32 == other._a32) && (this._a16 == other._a16)\n\t}\n\n\t/**\n\t * Greater than (strict)\n\t * @method gt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {\n\t\tif (this._a48 > other._a48) return true\n\t\tif (this._a48 < other._a48) return false\n\t\tif (this._a32 > other._a32) return true\n\t\tif (this._a32 < other._a32) return false\n\t\tif (this._a16 > other._a16) return true\n\t\tif (this._a16 < other._a16) return false\n\t\treturn this._a00 > other._a00\n\t}\n\n\t/**\n\t * Less than (strict)\n\t * @method lt\n\t * @param {Object} other UINT64\n\t * @return {Boolean}\n\t */\n\tUINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {\n\t\tif (this._a48 < other._a48) return true\n\t\tif (this._a48 > other._a48) return false\n\t\tif (this._a32 < other._a32) return true\n\t\tif (this._a32 > other._a32) return false\n\t\tif (this._a16 < other._a16) return true\n\t\tif (this._a16 > other._a16) return false\n\t\treturn this._a00 < other._a00\n\t}\n\n\t/**\n\t * Bitwise OR\n\t * @method or\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.or = function (other) {\n\t\tthis._a00 |= other._a00\n\t\tthis._a16 |= other._a16\n\t\tthis._a32 |= other._a32\n\t\tthis._a48 |= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise AND\n\t * @method and\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.and = function (other) {\n\t\tthis._a00 &= other._a00\n\t\tthis._a16 &= other._a16\n\t\tthis._a32 &= other._a32\n\t\tthis._a48 &= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise XOR\n\t * @method xor\n\t * @param {Object} other UINT64\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.xor = function (other) {\n\t\tthis._a00 ^= other._a00\n\t\tthis._a16 ^= other._a16\n\t\tthis._a32 ^= other._a32\n\t\tthis._a48 ^= other._a48\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise NOT\n\t * @method not\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.not = function() {\n\t\tthis._a00 = ~this._a00 & 0xFFFF\n\t\tthis._a16 = ~this._a16 & 0xFFFF\n\t\tthis._a32 = ~this._a32 & 0xFFFF\n\t\tthis._a48 = ~this._a48 & 0xFFFF\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift right\n\t * @method shiftRight\n\t * @param {Number} number of bits to shift\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a00 = this._a48 >> (n - 48)\n\t\t\tthis._a16 = 0\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a32 = 0\n\t\t\tthis._a48 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = (this._a48 >> n) & 0xFFFF\n\t\t\tthis._a48 = 0\n\t\t} else {\n\t\t\tthis._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF\n\t\t\tthis._a48 = (this._a48 >> n) & 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise shift left\n\t * @method shiftLeft\n\t * @param {Number} number of bits to shift\n\t * @param {Boolean} allow overflow\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {\n\t\tn %= 64\n\t\tif (n >= 48) {\n\t\t\tthis._a48 = this._a00 << (n - 48)\n\t\t\tthis._a32 = 0\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 32) {\n\t\t\tn -= 32\n\t\t\tthis._a48 = (this._a16 << n) | (this._a00 >> (16-n))\n\t\t\tthis._a32 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a16 = 0\n\t\t\tthis._a00 = 0\n\t\t} else if (n >= 16) {\n\t\t\tn -= 16\n\t\t\tthis._a48 = (this._a32 << n) | (this._a16 >> (16-n))\n\t\t\tthis._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = (this._a00 << n) & 0xFFFF\n\t\t\tthis._a00 = 0\n\t\t} else {\n\t\t\tthis._a48 = (this._a48 << n) | (this._a32 >> (16-n))\n\t\t\tthis._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF\n\t\t\tthis._a00 = (this._a00 << n) & 0xFFFF\n\t\t}\n\t\tif (!allowOverflow) {\n\t\t\tthis._a48 &= 0xFFFF\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate left\n\t * @method rotl\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// B.C.D.A rotl(16)\n\t\t\t// C.D.A.B rotl(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high << n) | (low >>> (32 - n))\n\t\tvar _low = (low << n) | (high >>> (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Bitwise rotate right\n\t * @method rotr\n\t * @param {Number} number of bits to rotate\n\t * @return ThisExpression\n\t */\n\tUINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {\n\t\tn %= 64\n\t\tif (n == 0) return this\n\t\tif (n >= 32) {\n\t\t\t// A.B.C.D\n\t\t\t// D.A.B.C rotr(16)\n\t\t\t// C.D.A.B rotr(32)\n\t\t\tvar v = this._a00\n\t\t\tthis._a00 = this._a32\n\t\t\tthis._a32 = v\n\t\t\tv = this._a48\n\t\t\tthis._a48 = this._a16\n\t\t\tthis._a16 = v\n\t\t\tif (n == 32) return this\n\t\t\tn -= 32\n\t\t}\n\n\t\tvar high = (this._a48 << 16) | this._a32\n\t\tvar low = (this._a16 << 16) | this._a00\n\n\t\tvar _high = (high >>> n) | (low << (32 - n))\n\t\tvar _low = (low >>> n) | (high << (32 - n))\n\n\t\tthis._a00 = _low & 0xFFFF\n\t\tthis._a16 = _low >>> 16\n\t\tthis._a32 = _high & 0xFFFF\n\t\tthis._a48 = _high >>> 16\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Clone the current _UINT64_\n\t * @method clone\n\t * @return {Object} cloned UINT64\n\t */\n\tUINT64.prototype.clone = function () {\n\t\treturn new UINT64(this._a00, this._a16, this._a32, this._a48)\n\t}\n\n\tif (typeof define != 'undefined' && define.amd) {\n\t\t// AMD / RequireJS\n\t\tdefine([], function () {\n\t\t\treturn UINT64\n\t\t})\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t\t// Node.js\n\t\tmodule.exports = UINT64\n\t} else {\n\t\t// Browser\n\t\troot['UINT64'] = UINT64\n\t}\n\n})(this)\n", "exports.UINT32 = require('./lib/uint32')\nexports.UINT64 = require('./lib/uint64')", "var crypto = require('crypto');\nvar crc32 = require('crc-32');\nvar UINT32 = require('cuint').UINT32;\nvar version = \"006\";\nvar randomInt = Math.floor(Math.random() * 0xFFFFFFFF);\nconst VERSION_LENGTH = 3;\nconst APP_ID_LENGTH = 32;\n\nvar AccessToken = function (appID, appCertificate, channelName, uid) {\n    let token = this;\n    this.appID = appID;\n    this.appCertificate = appCertificate;\n    this.channelName = channelName;\n    this.messages = {};\n    this.salt = randomInt;\n    this.ts = Math.floor(new Date() / 1000) + (24 * 3600);\n    if (uid === 0) {\n        this.uid = \"\";\n    } else {\n        this.uid = `${uid}`;\n    }\n\n    this.build = function () {\n        var m = Message({\n            salt: token.salt\n            , ts: token.ts\n            , messages: token.messages\n        }).pack();\n\n        var toSign = Buffer.concat(\n            [Buffer.from(token.appID, 'utf8'), \n            Buffer.from(token.channelName, 'utf8'), \n            Buffer.from(token.uid, 'utf8'), \n            m]);\n\n        var signature = encodeHMac(token.appCertificate, toSign);\n        var crc_channel = UINT32(crc32.str(token.channelName)).and(UINT32(0xffffffff)).toNumber();\n        var crc_uid = UINT32(crc32.str(token.uid)).and(UINT32(0xffffffff)).toNumber();\n        var content = AccessTokenContent({\n            signature: signature,\n            crc_channel: crc_channel,\n            crc_uid: crc_uid,\n            m: m\n        }).pack();\n        return (version + token.appID + content.toString('base64'));\n    }\n\n    this.addPriviledge = function (priviledge, expireTimestamp) {\n        token.messages[priviledge] = expireTimestamp;\n    };\n\n    this.fromString = function (originToken) {\n        try {\n            originVersion = originToken.substr(0, VERSION_LENGTH);\n            if(originVersion != version) {\n                return false;\n            }\n            var originAppID = originToken.substr(VERSION_LENGTH, (VERSION_LENGTH + APP_ID_LENGTH));\n            var originContent = originToken.substr((VERSION_LENGTH + APP_ID_LENGTH));\n            var originContentDecodedBuf = Buffer.from(originContent, 'base64');\n\n            var content = unPackContent(originContentDecodedBuf);\n            this.signature = content.signature;\n            this.crc_channel_name = content.crc_channel_name;\n            this.crc_uid = content.crc_uid;\n            this.m = content.m;\n\n            var msgs = unPackMessages(this.m);\n            this.salt = msgs.salt;\n            this.ts = msgs.ts;\n            this.messages = msgs.messages;\n            \n        } catch (err) {\n            console.log(err);\n            return false;\n        }\n        \n        return true;\n    };\n};\n\nmodule.exports.version = version;\nmodule.exports.AccessToken = AccessToken;\nmodule.exports.priviledges = {\n    kJoinChannel: 1,\n    kPublishAudioStream: 2,\n    kPublishVideoStream: 3,\n    kPublishDataStream: 4,\n    kPublishAudiocdn: 5,\n    kPublishVideoCdn: 6,\n    kRequestPublishAudioStream: 7,\n    kRequestPublishVideoStream: 8,\n    kRequestPublishDataStream: 9,\n    kInvitePublishAudioStream: 10,\n    kInvitePublishVideoStream: 11,\n    kInvitePublishDataStream: 12,\n    kAdministrateChannel: 101,\n    kRtmLogin: 1000\n};\n\nvar encodeHMac = function (key, message) {\n    return crypto.createHmac('sha256', key).update(message).digest();\n};\n\nvar ByteBuf = function () {\n    var that = {\n        buffer: Buffer.alloc(1024)\n        , position: 0\n    };\n\n    that.buffer.fill(0);\n\n    that.pack = function () {\n        var out = Buffer.alloc(that.position);\n        that.buffer.copy(out, 0, 0, out.length);\n        return out;\n    };\n\n    that.putUint16 = function (v) {\n        that.buffer.writeUInt16LE(v, that.position);\n        that.position += 2;\n        return that;\n    };\n\n    that.putUint32 = function (v) {\n        that.buffer.writeUInt32LE(v, that.position);\n        that.position += 4;\n        return that;\n    };\n\n    that.putBytes = function (bytes) {\n        that.putUint16(bytes.length);\n        bytes.copy(that.buffer, that.position);\n        that.position += bytes.length;\n        return that;\n    };\n\n    that.putString = function (str) {\n        return that.putBytes(Buffer.from(str));\n    };\n\n    that.putTreeMap = function (map) {\n        if (!map) {\n            that.putUint16(0);\n            return that;\n        }\n\n        that.putUint16(Object.keys(map).length);\n        for (var key in map) {\n            that.putUint16(key);\n            that.putString(map[key]);\n        }\n\n        return that;\n    };\n\n    that.putTreeMapUInt32 = function (map) {\n        if (!map) {\n            that.putUint16(0);\n            return that;\n        }\n\n        that.putUint16(Object.keys(map).length);\n        for (var key in map) {\n            that.putUint16(key);\n            that.putUint32(map[key]);\n        }\n\n        return that;\n    };\n    \n    return that;\n}\n\n\nvar ReadByteBuf = function(bytes) {\n    var that = {\n        buffer: bytes\n        , position: 0\n    };\n\n    that.getUint16 = function () {\n        var ret = that.buffer.readUInt16LE(that.position);\n        that.position += 2;\n        return ret;\n    };\n\n    that.getUint32 = function () {\n        var ret = that.buffer.readUInt32LE(that.position);\n        that.position += 4;\n        return ret;\n    };\n\n    that.getString = function () {\n        var len = that.getUint16();\n\n        var out = Buffer.alloc(len);\n        that.buffer.copy(out, 0, that.position, (that.position + len));\n        that.position += len;\n        return out;\n    };\n\n    that.getTreeMapUInt32 = function () {\n        var map = {};\n        var len = that.getUint16();\n        for( var i = 0; i < len; i++) {\n            var key = that.getUint16();\n            var value = that.getUint32();\n            map[key] = value;\n        }\n        return map;\n    };\n\n    return that;\n}\nvar AccessTokenContent = function (options) {\n    options.pack = function () {\n        var out = new ByteBuf();\n        return out.putString(options.signature)\n            .putUint32(options.crc_channel)\n            .putUint32(options.crc_uid)\n            .putString(options.m).pack();\n    }\n\n    return options;\n}\n\nvar Message = function (options) {\n    options.pack = function () {\n        var out = new ByteBuf();\n        var val = out\n            .putUint32(options.salt)\n            .putUint32(options.ts)\n            .putTreeMapUInt32(options.messages).pack();\n        return val;\n    }\n\n    return options;\n}\n\nvar unPackContent = function(bytes) {\n    var readbuf = new ReadByteBuf(bytes);\n    return AccessTokenContent({\n        signature: readbuf.getString(),\n        crc_channel_name: readbuf.getUint32(),\n        crc_uid: readbuf.getUint32(),\n        m: readbuf.getString()\n    });\n}\n\nvar unPackMessages = function(bytes) {\n    var readbuf = new ReadByteBuf(bytes);\n    return Message({\n        salt: readbuf.getUint32(),\n        ts: readbuf.getUint32(),\n        messages: readbuf.getTreeMapUInt32()\n    });\n}\n", "const AccessToken = require('../src/AccessToken').AccessToken\nconst Priviledges = require('../src/AccessToken').priviledges\n\nconst Role = {\n    // DEPRECATED. Role::ATTENDEE has the same privileges as Role.PUBLISHER.\n    ATTENDEE: 0,\n\n    // RECOMMENDED. Use this role for a voice/video call or a live broadcast, if your scenario does not require authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in).\n    PUBLISHER: 1,\n\n    /* Only use this role if your scenario require authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in).\n     * @note In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role.SUBSCRIBER still has the same privileges as Role.PUBLISHER.\n     */\n    SUBSCRIBER: 2,\n\n    // DEPRECATED. Role.ADMIN has the same privileges as Role.PUBLISHER.\n    ADMIN: 101\n}\n\nclass RtcTokenBuilder {\n\n   /**\n    * Builds an RTC token using an Integer uid.\n    * @param {*} appID  The App ID issued to you by Agora.\n    * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.\n    * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:\n    * - The 26 lowercase English letters: a to z.\n    * - The 26 uppercase English letters: A to Z.\n    * - The 10 digits: 0 to 9.\n    * - The space.\n    * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n    * @param {*} uid User ID. A 32-bit unsigned integer with a value ranging from 1 to (2^32-1).\n    * @param {*} role See #userRole.\n    * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.\n    * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.\n    * @param {*} privilegeExpiredTs  represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current timestamp + 600 (seconds).\n    * @return The new Token.\n    */\n    static buildTokenWithUid(appID, appCertificate, channelName, uid, role, privilegeExpiredTs) {\n        return this.buildTokenWithAccount(appID, appCertificate, channelName, uid, role, privilegeExpiredTs)\n    }\n\n   /**\n    * Builds an RTC token using an Integer uid.\n    * @param {*} appID  The App ID issued to you by Agora.\n    * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.\n    * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:\n    * - The 26 lowercase English letters: a to z.\n    * - The 26 uppercase English letters: A to Z.\n    * - The 10 digits: 0 to 9.\n    * - The space.\n    * - \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \" {\", \"}\", \"|\", \"~\", \",\".\n    * @param {*} account The user account.\n    * @param {*} role See #userRole.\n    * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.\n    * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.\n    * @param {*} privilegeExpiredTs  represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current timestamp + 600 (seconds).\n    * @return The new Token.\n    */\n    static buildTokenWithAccount(appID, appCertificate, channelName, account, role, privilegeExpiredTs) {\n        this.key = new AccessToken(appID, appCertificate, channelName, account)\n        this.key.addPriviledge(Priviledges.kJoinChannel, privilegeExpiredTs)\n        if (role == Role.ATTENDEE ||\n            role == Role.PUBLISHER ||\n            role == Role.ADMIN) {\n            this.key.addPriviledge(Priviledges.kPublishAudioStream, privilegeExpiredTs)\n            this.key.addPriviledge(Priviledges.kPublishVideoStream, privilegeExpiredTs)\n            this.key.addPriviledge(Priviledges.kPublishDataStream, privilegeExpiredTs)\n        }\n        return this.key.build();\n    }\n}\n\nmodule.exports.RtcTokenBuilder = RtcTokenBuilder;\nmodule.exports.Role = Role;\n", "const AccessToken = require(\"../src/AccessToken\").AccessToken\nconst Priviledges = require('../src/AccessToken').priviledges\n\nconst Role = {\n  Rtm_User: 1\n}\nclass RtmTokenBuilder {\n\n  /**\n   * @param {*} appID: The App ID issued to you by Agora. Apply for a new App ID from \n   *       Agora Dashboard if it is missing from your kit. See Get an App ID.\n   * @param {*} appCertificate:\tCertificate of the application that you registered in \n   *                 the Agora Dashboard. See Get an App Certificate.\n   * @param {*} account: The user account. \n   * @param {*} role : Role_Publisher = 1: A broadcaster (host) in a live-broadcast profile.\n   *      Role_Subscriber = 2: (Default) A audience in a live-broadcast profile.\n   * @param {*} privilegeExpiredTs : represented by the number of seconds elapsed since \n   *                   1/1/1970. If, for example, you want to access the\n   *                   Agora Service within 10 minutes after the token is \n   *                   generated, set expireTimestamp as the current \n   * @return token\n   */\n  static buildToken (appID, appCertificate, account, role, privilegeExpiredTs) {\n    const key = new AccessToken(appID, appCertificate, account, \"\")\n    key.addPriviledge(Priviledges.kRtmLogin, privilegeExpiredTs)\n    return key.build()\n  }\n}\n\nmodule.exports.RtmTokenBuilder = RtmTokenBuilder\nmodule.exports.Role = Role", "module.exports = {\n  RtcTokenBuilder: require('./src/RtcTokenBuilder').RtcTokenBuilder,\n  RtcRole: require('./src/RtcTokenBuilder').Role,\n  RtmTokenBuilder: require('./src/RtmTokenBuilder').RtmTokenBuilder,\n  RtmRole: require('./src/RtmTokenBuilder').Role\n}"],
  "mappings": "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",
  "names": ["module", "CRC32"]
}
